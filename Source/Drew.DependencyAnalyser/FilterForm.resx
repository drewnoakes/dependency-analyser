<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEACADIBgAAFgAAACgAAAAYAAAAMAAAAAEACAAAAAAAoAIAAAAAAAAAAAAAAAEAAAAA
        AADrulwA7b9fAP///wDruVsA25QfAOu8XQDrvF4Ap1UZAJZADAAAAAAA8styAP7//wDqtVEA7b5eAAAA
        AADrtlMA8MVnAOWsRgDjpj4A5apEANqRFwC/eTQA7cJhAOru+QDqt1MA4cN7AO3BaQDipzYA5t7LAOKk
        NgDv59UAyX4rALRaEgDu5tMA6r1fANeMEADjqD0A5atFANmNMgDbjzAA7cFmALthGADclx8A+Pz/AOa4
        YADmz5QA9vj/APXZnwDw9f4A7b5kAOOxSwDUizIAwWseAO3CZQDViDAA2Y8yAOWsQgDdmDIA0ZJEAOzY
        rQDvxWkA7vL8ANufRwDwxmsA4rp5APP4/wDBfjYA2pQdAOauUADcliIAx4U9APLMdQD11YkA7sd2AOi5
        WgDViygA7sZwAO3DagDdoEAA4J8wANXQzADqu1sA3p0pAM96JgDRgyYA5LVkAO/TmwDbkTEA1ZY8AOGX
        MwDvxWsAwHIiAM61jQDCdiQA1LBoAMyLPwDz4LoA9OCyAPXeqwCuXRwAxHMUANqWOwDerWEAyXodAN2m
        TQD558MA8uHAAMh0JAClUhYA3ZcjANKHKQDv3bsA78VnANuXOwDrwWUA2siuANyXIQDRjjQA2I8rAPDH
        bgDblBwAAAAAANOPNADzzXEA5rFJANqRGADPhzEA8+rXANyVHAAAAAAA48N8AO7cugDkqzsA+v7/AM6C
        KwDntVEA8cdsANK6lgDyy28Ax3spAMV5JwDyynAA8unXANeHLgDVr2oA7LxeANuUOADanjEA8chrAMSA
        OQDUvZQA3ZUdAMWDPADYlDUA8clxANqUMQDdrVwAv3AfAM59JwDfnzgA0YoqAPLUkQDgwXcA89SHANOX
        RwDXizAA0YEqAAAAAADblS4A465BAOWqRwDWkDEA2ZEXALBWDwDbmT8A5bJKAAAAAADfy6MA2I8UAO/E
        aADyzHIA6rlVAPHIbQDfoTkA675gANSRNgC9ZxsAzraRAPHKcQDvxWoA5a1PAM6PQgDos08A1owtAOGm
        SADckjMA9tiNANuTGgDJiD0A9NebAOzw+QC/fDMA1YcvANi+kwDquFEA044zAMVwIADwyG8AzH4gAMZ0
        GADx370AAAAAAOW+dgC3XRUA25c5ANaQMgDRt4sA7L1fAMyGLgDIdhgA58F0ANOFLQAAAAAA3q1UAKxT
        DQDwxmwA1Y8xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACQkJCQkJCQkJY2wHCQkJCQkJCQkJCQkJCQkJCQkJCQkJyRvRBwgJCQkJCQkJCQkJCQkJCQkJ
        CQkJFYSXZAgHCQkJCQkJCQkJCQkJCQkJCQkJQqlt2+CdCQkJCQkJCQkJCQkJCQkJCQkJla9SZ61bCQkJ
        CQkJCQkJCQkJCQkJCQkJmIdP0CBdCQkJCQkJCQkJCQkJCQkJCQkJRkodVNWMCQkJCQkJCQkJCQkJCQkJ
        CQkJxiIkbimLCQkJCQkJCQkJCQkJCQkJCQkJX3I4wbofCQkJCQkJCQkJCQkJCQkJCQkJv018qzTaCQkJ
        CQkJCQkJCQkJCQkJCQkJOkzAmc5+CQkJCQkJCQkJCQkJCQkJCQkJpEnMcWt1CQkJCQkJCQkJCQkJCQkJ
        CQkJQBoDTlOGCQkJCQkJCQkJCQkJCQkJCQlmodm4UZ6muQkJCQkJCQkJCQkJCQkJCVhiFjUxKGXdNnoJ
        CQkJCQkJCQkJCQkJoGlw4b2zPESPypLNCQkJCQkJCQkJCQniYUe8ms93Wo03JqXCMwkJCQkJCQkJCUtW
        SHu0iraIP5QlV8MnvtcJCQkJCQkJdtzEoy/HYGrSb4M7rj7WWaqbCQkJCQmo1AICC4UrLkEwPcgXc5aJ
        u8ucOQkJCQlVAgILf44eIS2CGaIcsZBe2FxQaAkJCZ8sMiOyrBQUfUMEBATFeHRFKoCT37cJCREYAAUG
        BQAAAAADAwAAAAAFBgaRtREJCQkSEwwPAQEBDRAKChANAQEBDwwTEgkJ/4//AP+D/wD/gf8A/4H/AP+B
        /wD/gf8A/4H/AP+B/wD/gf8A/4H/AP+B/wD/gf8A/4H/AP8A/wD+AH8A/AA/APgAHwDwAA8A4AAHAMAA
        AwDAAAMAgAABAIAAAQDAAAMA
</value>
  </data>
</root>